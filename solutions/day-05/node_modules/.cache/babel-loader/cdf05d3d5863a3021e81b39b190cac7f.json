{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\30-Days-Of-React-1\\\\solutions\\\\day-05\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst numeros = [[0, \"\"], [1, \"\"], [2, \"\"], [3, \"\"], [4, \"\"], [5, \"\"], [6, \"\"], [7, \"\"], [8, \"\"], [9, \"\"], [10, \"\"], [11, \"\"], [12, \"\"], [13, \"\"], [14, \"\"], [15, \"\"], [16, \"\"], [17, \"\"], [18, \"\"], [19, \"\"], [20, \"\"], [21, \"\"], [22, \"\"], [23, \"\"], [24, \"\"], [25, \"\"], [26, \"\"], [27, \"\"], [28, \"\"], [29, \"\"], [30, \"\"], [31, \"\"]];\n\nfunction esPrimo(a) {\n  let esprimo = true;\n  let i = 2;\n\n  while (esprimo && i < a) {\n    if (a % i === 0) {\n      esprimo = false;\n      console.log(\"Entro al if\");\n    } else i = i + 1;\n  }\n\n  return esprimo;\n}\n\nfunction esPar(a) {\n  return a % 2 === 0;\n}\n\nconst Numeros = ({\n  numeros\n}) => {\n  const listaNumeros = numeros.map(numero => /*#__PURE__*/_jsxDEV(Numero, {\n    numero: numero\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 46\n  }, this));\n};\n\n_c = Numeros;\nconst Numero = {\n  numero: [nu]\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Numeros\");","map":{"version":3,"sources":["C:/30-Days-Of-React-1/solutions/day-05/src/index.js"],"names":["React","ReactDOM","numeros","esPrimo","a","esprimo","i","console","log","esPar","Numeros","listaNumeros","map","numero","Numero","nu"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,MAAMC,OAAO,GAAC,CACV,CAAC,CAAD,EAAG,EAAH,CADU,EACH,CAAC,CAAD,EAAG,EAAH,CADG,EACI,CAAC,CAAD,EAAG,EAAH,CADJ,EACW,CAAC,CAAD,EAAG,EAAH,CADX,EACkB,CAAC,CAAD,EAAG,EAAH,CADlB,EACyB,CAAC,CAAD,EAAG,EAAH,CADzB,EAEV,CAAC,CAAD,EAAG,EAAH,CAFU,EAEH,CAAC,CAAD,EAAG,EAAH,CAFG,EAEI,CAAC,CAAD,EAAG,EAAH,CAFJ,EAEW,CAAC,CAAD,EAAG,EAAH,CAFX,EAEkB,CAAC,EAAD,EAAI,EAAJ,CAFlB,EAE0B,CAAC,EAAD,EAAI,EAAJ,CAF1B,EAEkC,CAAC,EAAD,EAAI,EAAJ,CAFlC,EAGV,CAAC,EAAD,EAAI,EAAJ,CAHU,EAGF,CAAC,EAAD,EAAI,EAAJ,CAHE,EAGM,CAAC,EAAD,EAAI,EAAJ,CAHN,EAGc,CAAC,EAAD,EAAI,EAAJ,CAHd,EAGsB,CAAC,EAAD,EAAI,EAAJ,CAHtB,EAG8B,CAAC,EAAD,EAAI,EAAJ,CAH9B,EAGsC,CAAC,EAAD,EAAI,EAAJ,CAHtC,EAIV,CAAC,EAAD,EAAI,EAAJ,CAJU,EAIF,CAAC,EAAD,EAAI,EAAJ,CAJE,EAIM,CAAC,EAAD,EAAI,EAAJ,CAJN,EAIc,CAAC,EAAD,EAAI,EAAJ,CAJd,EAIsB,CAAC,EAAD,EAAI,EAAJ,CAJtB,EAI8B,CAAC,EAAD,EAAI,EAAJ,CAJ9B,EAIsC,CAAC,EAAD,EAAI,EAAJ,CAJtC,EAKV,CAAC,EAAD,EAAI,EAAJ,CALU,EAKF,CAAC,EAAD,EAAI,EAAJ,CALE,EAKM,CAAC,EAAD,EAAI,EAAJ,CALN,EAKc,CAAC,EAAD,EAAI,EAAJ,CALd,EAKsB,CAAC,EAAD,EAAI,EAAJ,CALtB,CAAd;;AASA,SAASC,OAAT,CAAiBC,CAAjB,EACA;AACI,MAAIC,OAAO,GAAC,IAAZ;AACA,MAAIC,CAAC,GAAC,CAAN;;AAEA,SAAOD,OAAO,IAAIC,CAAC,GAACF,CAApB,EACA;AACI,QAAIA,CAAC,GAACE,CAAF,KAAM,CAAV,EACA;AACID,MAAAA,OAAO,GAAC,KAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAJD,MAMIF,CAAC,GAACA,CAAC,GAAC,CAAJ;AACP;;AACD,SAAOD,OAAP;AACH;;AAED,SAASI,KAAT,CAAeL,CAAf,EACA;AACI,SAAQA,CAAC,GAAC,CAAF,KAAM,CAAd;AACH;;AAGD,MAAMM,OAAO,GAAC,CAAC;AAACR,EAAAA;AAAD,CAAD,KAAa;AACvB,QAAMS,YAAY,GAACT,OAAO,CAACU,GAAR,CAAaC,MAAD,iBAAU,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAtB,CAAnB;AACH,CAFD;;KAAMH,O;AAKN,MAAMI,MAAM,GAAE;AAACD,EAAAA,MAAM,EAAE,CAACE,EAAD;AAAT,CAAd","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nconst numeros=[\r\n    [0,\"\"],[1,\"\"],[2,\"\"],[3,\"\"],[4,\"\"],[5,\"\"],\r\n    [6,\"\"],[7,\"\"],[8,\"\"],[9,\"\"],[10,\"\"],[11,\"\"],[12,\"\"],\r\n    [13,\"\"],[14,\"\"],[15,\"\"],[16,\"\"],[17,\"\"],[18,\"\"],[19,\"\"],\r\n    [20,\"\"],[21,\"\"],[22,\"\"],[23,\"\"],[24,\"\"],[25,\"\"],[26,\"\"],\r\n    [27,\"\"],[28,\"\"],[29,\"\"],[30,\"\"],[31,\"\"]\r\n]\r\n\r\n\r\nfunction esPrimo(a)\r\n{\r\n    let esprimo=true\r\n    let i=2\r\n\r\n    while (esprimo && i<a)\r\n    {\r\n        if (a%i===0)\r\n        {\r\n            esprimo=false\r\n            console.log(\"Entro al if\")\r\n        }\r\n        else\r\n            i=i+1\r\n    }\r\n    return esprimo\r\n}\r\n\r\nfunction esPar(a)\r\n{\r\n    return (a%2===0)\r\n}\r\n\r\n\r\nconst Numeros=({numeros})=>{\r\n    const listaNumeros=numeros.map((numero)=><Numero numero={numero}/>)\r\n}\r\n\r\n\r\nconst Numero=({numero: [nu]})"]},"metadata":{},"sourceType":"module"}